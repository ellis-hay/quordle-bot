{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nthis.store.subscribe((mutation, state) => {\n  console.log(\"state changed\");\n  localStorage.setItem('store', JSON.stringify(state));\n});\nexport default new Vuex.Store({\n  state: {\n    currentGuessIndex: 0,\n    guessedAllWords: false,\n    bombedOut: false,\n    currentGuessLetters: ['A', 'B', 'C', 'D', 'E'],\n    guesses: [['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', '']]\n  },\n  getters: {\n    updatedGuesses: state => {\n      const currentLetters = [...state.currentGuessLetters];\n      while (currentLetters.length < 5) {\n        currentLetters.push('');\n      }\n      if (!state.guessedAllWords && !state.bombedOut) {\n        state.guesses[state.currentGuessIndex] = currentLetters;\n      }\n      return state.guesses;\n    }\n  },\n  mutations: {\n    ADD_LETTER(state, letter) {\n      state.currentGuessLetters.push(letter);\n    },\n    REMOVE_LETTER(state) {\n      state.currentGuessLetters.pop();\n    },\n    RESET_CURRENT_LETTERS(state) {\n      state.currentGuessLetters = [];\n    },\n    GET_LOCAL_STORAGE_INFO(state) {\n      if (localStorage.getItem('guesses')) {\n        try {\n          state.guesses = JSON.parse(localStorage.getItem('guesses'));\n        } catch (e) {\n          localStorage.removeItem('guesses');\n        }\n      }\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","store","subscribe","mutation","state","console","log","localStorage","setItem","JSON","stringify","Store","currentGuessIndex","guessedAllWords","bombedOut","currentGuessLetters","guesses","getters","updatedGuesses","currentLetters","length","push","mutations","ADD_LETTER","letter","REMOVE_LETTER","pop","RESET_CURRENT_LETTERS","GET_LOCAL_STORAGE_INFO","getItem","parse","e","removeItem","actions","modules"],"sources":["C:/Users/Student/GitRepos/QuordleSolverAndGame/quordle-bot-ui/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nthis.store.subscribe((mutation, state) => {\n  console.log(\"state changed\")\n\tlocalStorage.setItem('store', JSON.stringify(state));\n});\n\nexport default new Vuex.Store({\n  state: {\n    currentGuessIndex: 0,\n    guessedAllWords: false,\n    bombedOut: false,\n    currentGuessLetters: ['A', 'B', 'C', 'D', 'E'],\n    guesses: [\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','','']\n    ]\n\n  },\n  getters: {\n    updatedGuesses: state =>{\n      const currentLetters = [...state.currentGuessLetters];\n      while (currentLetters.length < 5){\n        currentLetters.push('');\n      }\n      if (!state.guessedAllWords && !state.bombedOut){\n        state.guesses[state.currentGuessIndex] = currentLetters;\n      }\n      return state.guesses;\n    } \n  },\n  mutations: {\n    ADD_LETTER(state, letter){\n      state.currentGuessLetters.push(letter);\n    },\n    REMOVE_LETTER(state){\n      state.currentGuessLetters.pop();\n    },\n    RESET_CURRENT_LETTERS(state){\n      state.currentGuessLetters = [];\n    },\n    GET_LOCAL_STORAGE_INFO(state) {\n      if (localStorage.getItem('guesses')) {\n        try {\n          state.guesses = JSON.parse(localStorage.getItem('guesses'));\n        } catch(e) {\n          localStorage.removeItem('guesses');\n        }\n      }\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}