{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    currentGuessNumber: 1,\n    guessedAllWords: false,\n    bombedOut: false,\n    currentGuessLetters: ['A', 'B', 'C', 'D', 'E'],\n    guesses: [['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', '']]\n  },\n  getters: {\n    updatedGuesses: state => {\n      if (!state.guessedAllWords && !state.bombedOut) {\n        const rowNumber = state.guesses.indexOf(row => row.find(letter => letter === ''));\n        state.guesses[rowNumber] = state.currentGuessLetters;\n      }\n    }\n  },\n  mutations: {\n    ADD_LETTER(state, letter) {\n      state.currentGuessLetters.push(letter);\n    },\n    REMOVE_LETTER(state) {\n      state.currentGuessLetters.pop();\n    },\n    RESET_CURRENT_LETTERS(state) {\n      state.currentGuessLetters = [];\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","currentGuessNumber","guessedAllWords","bombedOut","currentGuessLetters","guesses","getters","updatedGuesses","rowNumber","indexOf","row","find","letter","mutations","ADD_LETTER","push","REMOVE_LETTER","pop","RESET_CURRENT_LETTERS","actions","modules"],"sources":["C:/Users/Student/GitRepos/QuordleSolverAndGame/quordle-bot-ui/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    currentGuessNumber: 1,\n    guessedAllWords: false,\n    bombedOut: false,\n    currentGuessLetters: ['A', 'B', 'C', 'D', 'E'],\n    guesses: [\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','',''],\n      ['','','','','']\n    ]\n\n  },\n  getters: {\n    updatedGuesses: state =>{\n      if (!state.guessedAllWords && !state.bombedOut){\n        const rowNumber = state.guesses.indexOf(row => row.find(letter => letter === ''));\n        state.guesses[rowNumber] = state.currentGuessLetters\n      }\n    } \n  },\n  mutations: {\n    ADD_LETTER(state, letter){\n      state.currentGuessLetters.push(letter);\n    },\n    REMOVE_LETTER(state){\n      state.currentGuessLetters.pop();\n    },\n    RESET_CURRENT_LETTERS(state){\n      state.currentGuessLetters = [];\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,kBAAkB,EAAE,CAAC;IACrBC,eAAe,EAAE,KAAK;IACtBC,SAAS,EAAE,KAAK;IAChBC,mBAAmB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC9CC,OAAO,EAAE,CACP,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;EAGpB,CAAC;EACDC,OAAO,EAAE;IACPC,cAAc,EAAEP,KAAK,IAAG;MACtB,IAAI,CAACA,KAAK,CAACE,eAAe,IAAI,CAACF,KAAK,CAACG,SAAS,EAAC;QAC7C,MAAMK,SAAS,GAAGR,KAAK,CAACK,OAAO,CAACI,OAAO,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,KAAK,EAAE,CAAC,CAAC;QACjFZ,KAAK,CAACK,OAAO,CAACG,SAAS,CAAC,GAAGR,KAAK,CAACI,mBAAmB;MACtD;IACF;EACF,CAAC;EACDS,SAAS,EAAE;IACTC,UAAUA,CAACd,KAAK,EAAEY,MAAM,EAAC;MACvBZ,KAAK,CAACI,mBAAmB,CAACW,IAAI,CAACH,MAAM,CAAC;IACxC,CAAC;IACDI,aAAaA,CAAChB,KAAK,EAAC;MAClBA,KAAK,CAACI,mBAAmB,CAACa,GAAG,EAAE;IACjC,CAAC;IACDC,qBAAqBA,CAAClB,KAAK,EAAC;MAC1BA,KAAK,CAACI,mBAAmB,GAAG,EAAE;IAChC;EACF,CAAC;EACDe,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}