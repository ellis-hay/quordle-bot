{"ast":null,"code":"export default {\n  name: \"quordle-keyboard\",\n  computed: {\n    quadrantColors() {\n      const quadGradientMap = new Map();\n      this.$store.getters.keyColors.forEach((array, letter) => {\n        let cssGradient = \"conic-gradient(from 270deg, \";\n        array.forEach((quadrant, i) => {\n          if (quadrant == \"green\") {\n            cssGradient += \"green \";\n          } else if (quadrant == \"yellow\") {\n            cssGradient += \"yellow \";\n          } else {\n            cssGradient += \"#EFE7DA \";\n          }\n          cssGradient += `${90 * i}deg ${90 * i + 90}deg`;\n          if (i < 3) {\n            cssGradient += ', ';\n          }\n        });\n        cssGradient += \")\";\n        quadGradientMap.set(letter, cssGradient);\n      });\n      return quadGradientMap;\n    }\n  },\n  methods: {\n    addLetter(event) {\n      if (this.$store.state.currentGuessLetters.length < 5) {\n        this.$store.commit(\"ADD_LETTER\", event.target.textContent);\n      }\n    },\n    backspace() {\n      this.$store.commit(\"REMOVE_LETTER\");\n    },\n    enter() {\n      if (this.$store.state.guessable.includes(this.$store.state.currentGuessLetters.join(''))) {\n        this.$store.commit('ENTER_WORD');\n        this.$store.commit('RESET_CURRENT_LETTERS');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","computed","quadrantColors","quadGradientMap","Map","$store","getters","keyColors","forEach","array","letter","cssGradient","quadrant","i","set","methods","addLetter","event","state","currentGuessLetters","length","commit","target","textContent","backspace","enter","guessable","includes","join"],"sources":["src/components/QuordleKeyboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n        <div class=\"keyboard-row\">\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('   ')}\">Q</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">W</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">E</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">R</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">T</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">Y</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">U</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">I</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">O</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">P</button>\r\n        </div>\r\n        <div class=\"keyboard-row\">\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">A</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">S</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">D</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">F</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">G</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">H</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">J</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">K</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">L</button>\r\n        </div>\r\n        <div class=\"keyboard-row\">\r\n            <button class=\"key key-special\"  @click=\"backspace\">⌫</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">Z</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">X</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">C</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">V</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">B</button>\r\n            <button class=\"key\" @click=\"addLetter($event)\" :style=\"{backgroundImage: quadrantColors.get('E')}\">N</button>\r\n            <button class=\"key key-special\" @click=\"enter\">↵</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"quordle-keyboard\",\r\n  computed: {\r\n    quadrantColors(){\r\n      const quadGradientMap = new Map();\r\n      this.$store.getters.keyColors.forEach((array, letter) => {\r\n        let cssGradient = \"conic-gradient(from 270deg, \"\r\n        array.forEach((quadrant, i) => {\r\n          if (quadrant == \"green\") {\r\n            cssGradient += \"green \";\r\n          } else if (quadrant == \"yellow\") {\r\n            cssGradient += \"yellow \";\r\n          } else {\r\n            cssGradient += \"#EFE7DA \";\r\n          }\r\n          cssGradient += `${(90 * i)}deg ${(90 * i + 90)}deg`;\r\n          if (i < 3) {\r\n            cssGradient += ', '\r\n          }\r\n        })\r\n        cssGradient += \")\";\r\n        quadGradientMap.set(letter, cssGradient);\r\n      })\r\n      return quadGradientMap;\r\n    }\r\n  },\r\n  methods: {\r\n    addLetter(event){\r\n      if (this.$store.state.currentGuessLetters.length < 5){\r\n        this.$store.commit(\"ADD_LETTER\", event.target.textContent);\r\n      }\r\n    },\r\n    backspace(){\r\n      this.$store.commit(\"REMOVE_LETTER\");\r\n    },\r\n    enter(){\r\n      if (this.$store.state.guessable.includes(this.$store.state.currentGuessLetters.join(''))) {\r\n        this.$store.commit('ENTER_WORD');\r\n        this.$store.commit('RESET_CURRENT_LETTERS')\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.keyboard-row {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    flex-grow: 1;\r\n    height: calc(16px + 4vh);\r\n    margin-top: 2px;\r\n}\r\n\r\n.key{\r\n    display: flex;\r\n    font-family: 'Questrial', sans-serif;\r\n    font-size: calc(16px + 1.5vh);\r\n    font-weight: 500;\r\n    height: 100%;\r\n    aspect-ratio: 1/1;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 2px;\r\n}\r\n\r\n.key-special{\r\n    flex: 0 0 14.5% ;\r\n}\r\n\r\n.key:hover {\r\n  background-color: #ebdfcc;\r\n}\r\n\r\n</style>"],"mappings":"AAuCA;EACAA,IAAA;EACAC,QAAA;IACAC,eAAA;MACA,MAAAC,eAAA,OAAAC,GAAA;MACA,KAAAC,MAAA,CAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,EAAAC,KAAA,EAAAC,MAAA;QACA,IAAAC,WAAA;QACAF,KAAA,CAAAD,OAAA,EAAAI,QAAA,EAAAC,CAAA;UACA,IAAAD,QAAA;YACAD,WAAA;UACA,WAAAC,QAAA;YACAD,WAAA;UACA;YACAA,WAAA;UACA;UACAA,WAAA,YAAAE,CAAA,YAAAA,CAAA;UACA,IAAAA,CAAA;YACAF,WAAA;UACA;QACA;QACAA,WAAA;QACAR,eAAA,CAAAW,GAAA,CAAAJ,MAAA,EAAAC,WAAA;MACA;MACA,OAAAR,eAAA;IACA;EACA;EACAY,OAAA;IACAC,UAAAC,KAAA;MACA,SAAAZ,MAAA,CAAAa,KAAA,CAAAC,mBAAA,CAAAC,MAAA;QACA,KAAAf,MAAA,CAAAgB,MAAA,eAAAJ,KAAA,CAAAK,MAAA,CAAAC,WAAA;MACA;IACA;IACAC,UAAA;MACA,KAAAnB,MAAA,CAAAgB,MAAA;IACA;IACAI,MAAA;MACA,SAAApB,MAAA,CAAAa,KAAA,CAAAQ,SAAA,CAAAC,QAAA,MAAAtB,MAAA,CAAAa,KAAA,CAAAC,mBAAA,CAAAS,IAAA;QACA,KAAAvB,MAAA,CAAAgB,MAAA;QACA,KAAAhB,MAAA,CAAAgB,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}